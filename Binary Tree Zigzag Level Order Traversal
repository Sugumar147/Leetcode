/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        Queue<TreeNode> q=new LinkedList<>();
        List<List<Integer>> li=new ArrayList<>();
        if(root==null) return li;
        q.add(root);
        int f=0;
        Stack<Integer> s=new Stack<>();
        while(!q.isEmpty()) {
            int c=q.size();
            List<Integer> list=new ArrayList<>();
            while(c-- > 0) {
                TreeNode t=q.poll();
                s.push(t.val);
                if(t.left!=null) {
                    q.add(t.left);
                }
                if(t.right!=null) {
                    q.add(t.right);
                }
            }
            if(f==0) {
                for(int i=0;i<s.size();i++) {
                    list.add(s.get(i));
                }
            }
            else {
                for(int i=s.size()-1;i>=0;i--) {
                    list.add(s.get(i));
                }
            }
            if(f==0) {
                f=1;
            }
            else {
                f=0;
            }
            s.clear();
            li.add(list);
        }
        return li;
    }
}
